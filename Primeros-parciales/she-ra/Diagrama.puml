@startuml She-Ra

class Proyecto {
  nombre : String
  tareas : List<Tarea>
  agregarTarea(tarea) : void
}
Proyecto --> "*" Tarea

abstract class Tarea {
  nombre : String
  descripcion : String
  estado : EstadoTarea
  getEstado() : EstadoTarea
}

abstract class HistoriaOFallo {
  estimacion : Estimacion
  imagen : String
  periodo : Periodo
}
class Historia
class Fallo

class Epica {
  persona : Persona
  periodo : Periodo
  tareas : List<Tarea>
  agregarTarea(tarea) : void
}
' A su vez, las Épicas engloban Historias y Fallos en unidades conceptuales (?)

HistoriaOFallo <-- Iteracion

class Iteracion {
  fechaInicio : Date
  fechaFin : Date
}
enum EstadoTarea {
  PENDIENTE,
  POR_HACER,
  EN_PROGRESO,
  TERMINADA,
}

HistoriaOFallo -up-|> Tarea
Historia -up-|> HistoriaOFallo
Fallo -up-|> HistoriaOFallo
Epica -up-|> Tarea
Epica --> "*" Tarea
HistoriaOFallo -up-> EstadoTarea

interface Notifier {
  notify(email, message) : void
}

class NotifierAdapter {
  notify(email, message) : void
}

class Persona {
  tareas : List<HistoriaOFallo>
  asignarTarea(tarea) : void
  notificarAsignacionDeTarea(tarea) : void
}
' notificarAsignacionDeTarea se ejecutaria dentro de asignarTarea
NotifierAdapter --> Notifier
Persona --> NotifierAdapter
Persona --> "*" HistoriaOFallo

abstract class Estimacion {
  cantidadEstimada : Int
}
class EstimacionDefinitiva {
  cantidadEstimada : Int
}
class EstimacionTentantiva {
  cantidadEstimada : Int
}

HistoriaOFallo --> Estimacion
EstimacionDefinitiva -up-|> Estimacion
EstimacionTentantiva -up-|> Estimacion

@enduml